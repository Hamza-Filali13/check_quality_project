name: ðŸ”¬ Data Quality Platform CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: dq_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: dq_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r streamlit_app/requirements.txt
        pip install pytest flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 streamlit_app --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 streamlit_app --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test database connection
      run: |
        cd streamlit_app
        python test_db_connection.py
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: dq_user
        POSTGRES_PASSWORD: test_password
        POSTGRES_DB: dq_db

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker images
      run: |
        docker-compose build --no-cache
    
    - name: Test Docker compose
      run: |
        docker-compose up -d postgres
        sleep 10
        docker-compose ps
        docker-compose down
